#define md 1000000007
#define ll long long
class Solution {
public:

ll max_array_sum(vector<int>&arr){

      int n=arr.size();
      ll sum=0;
      ll max_sum=0;

      for(int i=0;i<n;i++){
            sum+=arr[i];
            if(sum<0){
                sum=0;
                if(arr[i]>0) sum=arr[i];
            }
            max_sum=max(max_sum,sum);
      }

      return max_sum;
}

    int kConcatenationMaxSum(vector<int>& arr, int k) {
        
        int n=arr.size();
        ll pref_max=0;   // it store max-sum (0 to k) at any index i
        
        ll sum=0;

        for(int i=0;i<n;i++){
             sum+=arr[i];
             pref_max=max(pref_max,sum);
        }

        ll suf[n]; // store subarray sum i to n
        sum=0;

        for(int i=n-1;i>=0;i--){
            sum+=arr[i];
            suf[i]=sum;
        }
        ll kadane_sum=max_array_sum(arr);

        ll ans=kadane_sum;
       

        for(int i=0;i<n;i++){

            ll temp=0;
    
            if(k>2 and suf[0]>0){
                temp=suf[i]+suf[0]*(k-2)+pref_max;
            }else{
                if(k>1) temp=(suf[i]+pref_max);
            }

            ans=max(ans,temp);
        }

        return ans%md;

    }
};
