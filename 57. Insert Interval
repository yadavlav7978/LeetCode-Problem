class Solution {
public:
    vector<vector<int>> insert(vector<vector<int>>& intervals, vector<int>& newInterval) {
        
        int n=intervals.size();
        vector<bool>overlap(n,false);
        int start=newInterval[0];
        int end=newInterval[1];

        for(int i=0;i<intervals.size();i++){

             if((intervals[i][0]>=start and intervals[i][0]<=end)
             || (intervals[i][1]>=start and intervals[i][1]<=end)){
                    overlap[i]=true;
             }else if(intervals[i][0]<=start and intervals[i][1]>=end){
                 overlap[i]=true;
             }
        }

         vector<vector<int>>ans;
         int tempStart=newInterval[0];
         int tempEnd=newInterval[1];
         bool notOverlap=true;

        for(int i=0;i<n;i++){

             if(overlap[i]==false){
                  ans.push_back(intervals[i]);
               }else{
                   int j=i;
                   tempStart=min(intervals[j][0],newInterval[0]);
                   while(j<n and overlap[j]==true) j++;
                   j--;
                   tempEnd=max(intervals[j][1],newInterval[1]);
                   i=j;
                   ans.push_back({tempStart,tempEnd});
                   notOverlap=false;
               }
        }

        if(notOverlap){
            ans.push_back({tempStart,tempEnd});
        }

        sort(ans.begin(),ans.end());

        return ans;     
    }
};
