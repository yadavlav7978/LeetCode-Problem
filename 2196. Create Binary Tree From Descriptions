class Solution {
public:
    TreeNode* createBinaryTree(vector<vector<int>>&nums) {
        
        map<int,TreeNode*>mp;
        int n=nums.size();
        set<int>st;

        for(int i=0;i<n;i++){
            int parent=nums[i][0];
            int child=nums[i][1];
            if(!mp[parent]) mp[parent]=new TreeNode(parent);
            if(!mp[child]) mp[child]=new TreeNode(child);
            st.insert(parent);
        }
    for(int i=0;i<n;i++){
            int parent=nums[i][0];
            int child=nums[i][1];
            bool isleft=nums[i][2];
            if(isleft){
                mp[parent]->left=mp[child];
            }else{
                mp[parent]->right=mp[child];
            }
            st.erase(child);
        }
    
        return mp[*st.begin()];
    
    }
};
