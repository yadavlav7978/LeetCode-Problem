class Solution {
public:

int asciisum(string& s,int i){
     
     int sum=0;

     for(int j=i;j<s.length();j++){
         sum+=s[j];
     }

     return sum;
}

vector<vector<int>>dp;

int call(string& s1,string& s2,int i,int j){
      
      if(i>=s1.length() && j>=s2.length()) return 0;
      
      if(i>=s1.length()){
          return asciisum(s2,j);
      }
      if(j>=s2.length()){
          return asciisum(s1,i);
      }

      if(dp[i][j]!=-1) return dp[i][j];

      if(s1[i]==s2[j]){
          return dp[i][j]=call(s1,s2,i+1,j+1);
      }
    
      return dp[i][j]=min(s1[i]+call(s1,s2,i+1,j),s2[j]+call(s1,s2,i,j+1));
      
}

    int minimumDeleteSum(string s1, string s2) {
        
        dp.resize(s1.length()+2,vector<int>(s2.length()+2,-1));
           return call(s1,s2,0,0);
    }
};
