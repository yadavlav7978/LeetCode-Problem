class Solution {
public:
int n1,n2,n3;
int dp[202][102][102];

bool call(string &s3,int i,string &s1,int x,string &s2,int y){

    if(i>=n3){
        return true;
    }
    if(dp[i][x][y]!=-1) return dp[i][x][y];
    bool ans=false;

    if(s3[i]==s1[x] and s3[i]==s2[y]){
        ans=call(s3,i+1,s1,x+1,s2,y)||call(s3,i+1,s1,x,s2,y+1);
    }
    else if(s3[i]==s1[x]){
        ans=call(s3,i+1,s1,x+1,s2,y);
    }
    else if(s3[i]==s2[y]){
        ans=call(s3,i+1,s1,x,s2,y+1);
    }

    return dp[i][x][y]=ans;
}

    bool isInterleave(string s1, string s2, string s3) {

         n1=s1.length();
         n2=s2.length();
         n3=s3.length();

         if(n3!=(n1+n2)) return false;

         memset(dp,-1,sizeof(dp));

         return call(s3,0,s1,0,s2,0);
    }
};
