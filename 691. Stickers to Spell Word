#define inf 1000
class Solution {
public:

int n;
unordered_map<string,int>dp;

int call(vector<vector<int>>&mp,string target){

    if(target.length()==0) return 0;
    if(dp.find(target)!=dp.end()) return dp[target];

    int ans=inf;

    vector<int>targetarray(26,0);

    for(int i=0;i<target.length();i++){
        targetarray[target[i]-'a']++;
    }

    for(int i=0;i<n;i++){
        
        if(mp[i][target[0]-'a']==0) continue;

        string rem;

        for(int j=0;j<26;j++){
            int ct=targetarray[j]-mp[i][j];
            while(ct>0){
                rem+=(j+'a');
                ct--;
            }
        }

        ans=min(ans,1+call(mp,rem));

    }

    return dp[target]=ans;
}

    int minStickers(vector<string>& stickers, string target) {
        
        n=stickers.size();

        vector<vector<int>>mp(n,vector<int>(26,0));

        for(int i=0;i<n;i++){
            string x=stickers[i];

            for(int j=0;j<x.length();j++){
                mp[i][x[j]-'a']++;
            }
         }

         int ans=call(mp,target);

         if(ans>=inf) return -1;
         return ans;
    }
};
